{"version":3,"file":"static/webpack/static/development/pages/posts/2020_02_22_unity_setup.js.f3ceba1ae235d88b7fa6.hot-update.js","sources":["webpack:///./pages/posts/2020_02_22_unity_setup.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { withRouter } from 'next/router'\nimport BlogPost from '../../components/layouts/blog-post'\n// import Foo from '../../components/foo'\n// import dynamic from 'next/dynamic'\n// const DynamicFoo = dynamic(() => import('../../components/foo'), { ssr: false })\nexport const meta = {\n  published: true,\n  publishedAt: '2020-02-22',\n  title: 'Prototyping Physics Demos',\n  summary: '-',\n  image: ''\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Unity = makeShortcode(\"Unity\");\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = withRouter(({ children, router }) => (\n  <BlogPost path={router.pathname} meta={meta}>\n    {children}\n  </BlogPost>\n))\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Problem`}</h2>\n    <p>{`You want to quickly demo, develop, or benchmark a rigid body physics engine with great graphics, and you don't want to write your own renderer.`}</p>\n    <p>{`Let's take a look at how we can `}</p>\n    <h2>{`Solution 1: Physics Engine Plugin using Unity`}</h2>\n    <Unity buildJsonPath=\"/static/2020_02_22_unity_setup/WebGLBuild.json\" unityLoaderJsPath=\"/static/2020_02_22_unity_setup/UnityLoader.js\" mdxType=\"Unity\" />\n    <h2>{`Solution 2: Physics Engine Plugin using Unreal.`}</h2>\n    <h2></h2>\n    <p>{`Let's get started with unity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ ./some-shell-script.sh\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAGA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;;;;A","sourceRoot":""}